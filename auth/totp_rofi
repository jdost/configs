#!/usr/bin/env bash

set -euo pipefail

TOTP_CACHE=${XDG_CACHE_HOME:-$HOME/.cache}/ykman_totp
REFRESH="Refresh list"

fail() {  # output failure message and fail
    echo ${1:-'Something went wrong.'}
    exit ${2:-1}
}
debug() {  # dump text to stderr
    echo ${1:-} >&2
}
message() {  # dump a message to the rofi message bar
    echo -en "\0message\x1f$1\n"
}

list() {  # dump list of TOTP tokens with standard prefix
    if [[ -e "$TOTP_CACHE" ]]; then
        cat $TOTP_CACHE
        return
    fi

    if ! which ykman &> /dev/null; then
        return
    elif [[ -z "$(ykman list 2> /dev/null)" ]]; then
        return
    fi

    ykman oath accounts list > $TOTP_CACHE
    cat $TOTP_CACHE
}

get() {  # retrieve the current TOTP as passed in
    local target=${1:-}
    [ -z "$target" ] && fail 'Need a TOTP token to generate a code for'
    ykman oath accounts code -s "$target"
}

copy() {  # temporarily populate the clipboard with the value
    local value=${1:-}
    [ -z "$value" ] && fail 'Nothing to copy'
    local time_window=${2:-30}
    # Lazy attempt at differentiating x and wayland
    if which xclip &>/dev/null; then
        local is_xorg=1
        local prvs=$(xclip -selection 'clipboard' -out)
    else
        local is_xorg=
        local prvs=$(wc-paste)
    fi

    coproc (
        if [[ ! -z $is_xorg ]]; then
            echo "$value" | xclip -in -selection 'clipboard'
        else
            echo "$value" | wl-copy
        fi
        sleep $time_window
        if [[ ! -z $is_xorg ]]; then
            echo "$prvs" | xclip -in -selection 'clipboard'
        else
            echo "$prvs" | wl-copy
        fi
    )
}
output() {  # output a value to the display after a short wait
    local value=${1:-}
    [ -z "$value" ] && fail 'Nothing to output'
    local time_window=${2:-1}
    # Lazy attempt at differentiating x and wayland
    if which xclip &>/dev/null; then
        local is_xorg=1
    else
        local is_xorg=
    fi

    coproc (
        sleep $time_window
        if [[ ! -z $is_xorg ]]; then
            local windowid=$(xdotool getactivewindow)
            xdotool type --clearmodifiers --window $windowid --delay 5 -- $value
        else
            wtype -d 5 $value
        fi
    )
}

ACTION="${1:-}"
if [[ -z "$ACTION" ]]; then
    echo -en "\0use-hot-keys\x1ftrue\n"
    list
    echo "$REFRESH"
elif [[ "$ACTION" == "$REFRESH" ]]; then
    rm $TOTP_CACHE
    list
elif [[ "$ACTION" == "oops" ]]; then
    exit
else
    message "Got action: $ACTION"
    SECRET=$(get $(echo $ACTION | cut -d' ' -f2-))

    if [[ "$ROFI_RETV" == "10" ]]; then
        copy $SECRET
    else
        output $SECRET
    fi
fi
